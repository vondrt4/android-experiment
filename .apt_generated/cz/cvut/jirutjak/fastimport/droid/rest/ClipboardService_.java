//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package cz.cvut.jirutjak.fastimport.droid.rest;

import java.util.Collections;
import java.util.HashMap;
import com.google.code.rome.android.repackaged.com.sun.syndication.feed.atom.Entry;
import com.google.code.rome.android.repackaged.com.sun.syndication.feed.atom.Feed;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.client.ClientHttpRequestFactory;
import org.springframework.web.client.RestTemplate;

public class ClipboardService_
    implements ClipboardService
{

    private RestTemplate restTemplate;

    public ClipboardService_() {
        restTemplate = new RestTemplate();
    }

    public ClipboardService_(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    public ClipboardService_(ClientHttpRequestFactory requestFactory) {
        restTemplate = new RestTemplate(requestFactory);
    }

    @Override
    public void setRestTemplate(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    @Override
    public Feed getSnippets() {
        HttpHeaders httpHeaders = new HttpHeaders();
        httpHeaders.setAccept(Collections.singletonList(MediaType.APPLICATION_XML));
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange("http://kosapi.fit.cvut.cz/api/3/courses", HttpMethod.GET, requestEntity, Feed.class).getBody();
    }

    @Override
    public Entry getSnippet(Long id) {
        HashMap<String, Object> urlVariables = new HashMap<String, Object>();
        urlVariables.put("id", id);
        HttpHeaders httpHeaders = new HttpHeaders();
        httpHeaders.setAccept(Collections.singletonList(MediaType.APPLICATION_XML));
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange("http://kosapi.fit.cvut.cz/api/3/courses/{id}", HttpMethod.GET, requestEntity, Entry.class, urlVariables).getBody();
    }

    @Override
    public Feed getSnippets(int limit, int offset) {
        HashMap<String, Object> urlVariables = new HashMap<String, Object>();
        urlVariables.put("limit", limit);
        urlVariables.put("offset", offset);
        HttpHeaders httpHeaders = new HttpHeaders();
        httpHeaders.setAccept(Collections.singletonList(MediaType.APPLICATION_XML));
        HttpEntity<Object> requestEntity = new HttpEntity<Object>(httpHeaders);
        return restTemplate.exchange("http://kosapi.fit.cvut.cz/api/3/courses?limit={limit}&offset={offset}", HttpMethod.GET, requestEntity, Feed.class, urlVariables).getBody();
    }

    @Override
    public void deleteSnippet(Long id) {
        HashMap<String, Object> urlVariables = new HashMap<String, Object>();
        urlVariables.put("id", id);
        restTemplate.exchange("http://kosapi.fit.cvut.cz/api/3/courses/{id}", HttpMethod.DELETE, null, null, urlVariables);
    }

}
